include:
  remote: 'https://gitlab.com/gitlab-org/gitlab/-/raw/2851f4d5/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml'

variables:
   VERSION: 1.0.${CI_PIPELINE_ID}

stages:
    - build
    - release
    - test
    - deploy

semgrep-sast:
  stage: test
  script:
    - semgrep --config=auto ${PROJECT_PATH}
  rules:
    - changes:
      - backend/*
  needs:
    - job: backend-build
      optional: true


backend-build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/dumplings-backend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true
  rules:
    - changes:
      - backend/**/*

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/dumplings-backend:$CI_COMMIT_SHA $VERSION
  rules:
    - changes:
      - backend/**/*

deploy-backend-locally:
  stage: deploy
  image: docker:dind
  variables:
    #задается или в настройках CI/CD или в deploy.sh
    PUBLIC_OBJECT_STORAGE_URL: ${PUBLIC_OBJECT_STORAGE_URL}
  before_script:
    - apk add openssh-client curl bash
    - eval $(ssh-agent -s)
    - echo -n "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Backend image with version $VERSION creation success."

    #push image into the nexus
    - docker login -u ${NEXUS_USERNAME} -p ${NEXUS_REPO_PASS} ${NEXUS_ACCESS_URL} || true
    - docker push ${NEXUS_ACCESS_URL}/${NEXUS_REPOSITORY_NAME_DOCKER_BACKEND} || true

    - docker context create remote --docker "host=ssh://${DEPLOYMENT_USER}@${DEPLOYMENT_HOST}" || true
    - docker context use remote

    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker network create -d bridge dumplings_network || true

    - docker compose up -d backend
 
    - outfile="${CI_PROJECT_DIR}/dumplings-store-backend-$VERSION.tar" &&
      docker save -o $outfile ${CI_REGISTRY_IMAGE}/dumplings-backend:${VERSION} &&
      curl "${NEXUS_ACCESS_URL}/repository/${NEXUS_REPOSITORY_NAME_DOCKER_BACKEND}/" 
          --user "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" 
          --upload-file "${outfile}" 
          --verbose 
          --fail

  environment:
    name: staging
    url: "${DUMPLINGS_STORE_URL}"
  rules:
    - if: $DEPLOY_VARIABLE != "manual"
      when: on_success
      allow_failure: false
    - if: $DEPLOY_VARIABLE == "manual"
      when: manual
      allow_failure: true
      
show-deploy-backend-k8s-info-only:
  stage: deploy
  image: docker:dind
  script:
    - >
      echo "Backend image created.
      -----------------------
      It's ready to be deployed to the Kubernetes cluster with backend image-version $VERSION
      Please, copy this ID and paste to the values.yaml of backend helm chart file."
    
  rules:
    - if: $DEPLOY_VARIABLE == "manual"
      when: on_success
      allow_failure: false

